name: First workflow

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #        os: [ubuntu-latest, windows-latest, macOS-latest]
        os: [ubuntu-latest]
        # php-versions key comes from github shivammathur/setup-php library we are using to change php version
        php-versions: ['7.4']

    name: ${{ matrix.os }} PHP ${{ matrix.php-versions }}
    steps:
      - uses: actions/checkout@v2

      - name: Hello Codelies!
        run: echo "Hello!!!! from ${{ github.workflow }} triggered by the ${{ github.event_name }} done by ${{ github.actor }}"

      - name: ðŸ˜Š More and more
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: |
          echo "Job Context: $JOB_CONTEXT"
          echo "Done!"

      - name: Greeting if Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: echo "Hi from Ubuntu!"

      - name: Setup PHP version
        uses: shivammathur/setup-php@v1
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: none

      - name: Install dependencies
        run: make composer-install

      - name: Start all the environment
        run: make start

#      - name: Wait for the environment to get up
#        run: |
#          while ! docker exec codelytv-php_ddd_skeleton-mooc-mysql mysqladmin --user=root --password= --host "127.0.0.1" ping --silent &> /dev/null ; do
#              echo "Waiting for database connection..."
#              sleep 2
#          done
#      - name: Run the tests
#        working-directory: ./lessons/04-Testing_Infrastructure/04.2-Installing_dependencies_by_docker
#        run: make test

#      - name: Start app
#        working-directory: ./docker
#        run: make start
#
##      - name: Install composer dependencies
##        run: composer install --ignore-platform-reqs
#
#      #- name: Before using Laravel's encrypter, you must set a key option in your config/app.php configuration file
#      #  run: php artisan key:generate
#
#      - name: Run the tests
#        run: composer phpunit
